version: '3'
services:
  
  #PHP Service 1
  php1:
    build: ./
    container_name: php1
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: php1
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - docker-final-network

  #PHP Service 2
  php2:
    build: ./
    container_name: php2
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: php2
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - docker-final-network

  #Nginx Service 1
  nginx1:
    image: nginx:latest
    container_name: nginx1
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./nginx-config/nginx1.conf:/etc/nginx/conf.d/default.conf
    networks:
      - docker-final-network
    depends_on:
      - php1

  #Nginx Service 2
  nginx2:
    image: nginx:latest
    container_name: nginx2
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www
      - ./nginx-config/nginx2.conf:/etc/nginx/conf.d/default.conf
    networks:
      - docker-final-network
    depends_on:
      - php2

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - docker-final-network

#Docker Networks
networks:
  docker-final-network:

#Volumes
volumes:
  dbdata:
